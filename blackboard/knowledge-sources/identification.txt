.. _sec-idKss:

Identification knowledge sources
--------------------------------

.. contents::
    :depth: 1
    :local:

This section focuses on implementation of sound identification knowledge sources
within the blackboard framework.

.. _sec-identity-knowledge-source:

Identity knowledge source: ``IdentityKS``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Objects of class ``IdentityKS`` implement source type models, by incorporating
an instance of a model (which has to implement the `models.Base
<https://github.com/TWOEARS/TwoEars/blob/master/IdentificationTraining/src/%2Bmodels/Base.m>`_
interface) with knowledge about the relationship of auditory cues and certain
sound source types. Many Identity knowledge sources can be used concurrently;
usually, for each sound class to be identified, you would instantiate an object
of class ``IdentityKS`` with the respective model. The models get loaded from
directories you specify upon construction, and should be created with the
:ref:`sec-identification-training`.  The model object of ``IdentityKS`` can
employ any kind of model, such as a linear support vector machine, or a Gaussian
mixture model. The ``IdentityKS`` needs access to |AFE| signals, thus it is a
subclass of ``AuditoryFrontEndDepKS`` (see
SectionÂ :ref:`sec-afe-dep-knowledge-source`).  The model object holds the signal
request structure.

The knowledge source predicts, based on the incorporated source model, whether
the currently received auditory stream includes an auditory object of the sound
type it represents.

+------------------------+---------------------------------------+
| binds to               | ``AuditoryFrontEndKS.KsFiredEvent``   |
+------------------------+---------------------------------------+
| writes data category   | ``identityHypotheses``                |
+------------------------+---------------------------------------+
| triggers event         | ``KsFiredEvent``                      |
+------------------------+---------------------------------------+

Have a look at the example :ref:`sec-examples-identification` to see ``IdentityKS``
in action.


.. _sec-identity-decision-knowledge-source:

Identity decision knowledge source: ``IdDecisionKS``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The identity knowledge source checks new identity hypotheses. It then decides
which of them are valid, by comparison and incorporating knowledge about the
number of assumed auditory objects in the scene.

+------------------------+-------------------------------+
| binds to               | ``IdentityKS.KsFiredEvent``   |
+------------------------+-------------------------------+
| reads data category    | ``identityHypotheses``        |
+------------------------+-------------------------------+
| writes data category   | ``identityDecision``          |
+------------------------+-------------------------------+
| triggers event         | ``KsFiredEvent``              |
+------------------------+-------------------------------+


.. _sec-idtruthplotks:

Identity Live Debugging knowledge source: ``IdTruthPlotKS``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This is not really a knowledge source in the sense of the word, but rather a way
to enable live-inspection of the identity information in the blackboard system.
Upon construction, it takes ground truth information about event labels, onset
and offset times; and when triggered, displays this in comparison with the
actual hypotheses created by the identity knowledge sources. :ref:`This figure
<fig-identify>` shows an example of the produced plot.

+------------------------+-------------------------------+
| binds to               | ``IdentityKS.KsFiredEvent``   |
+------------------------+-------------------------------+
| reads data category    | ``identityHypotheses``        |
+------------------------+-------------------------------+

.. _sec-segmentation-identity-knowledge-source:

Segment Identity knowledge source: ``SegmentIdentityKS``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The segment identity knowledge source checks new segmentation hypotheses and
assigns an identity to each. This is performed by applying the mask estimated by
the |SegmentationKS| before performing inference on the source's identity.
``identityHypotheses`` are triggered for each source in the
``segmentationHypotheses``

+------------------------+-----------------------------------+
| binds to               | ``SegmentationKS.KsFiredEvent``   |
+------------------------+-----------------------------------+
| reads data category    | ``SegmentationHypotheses``        |
+------------------------+-----------------------------------+
| writes data category   | ``identityHypotheses``            |
+------------------------+-----------------------------------+
| triggers event         | ``KsFiredEvent``                  |
+------------------------+-----------------------------------+

.. vim: filetype=rst spell:
