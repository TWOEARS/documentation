.. _sec-segKss:

Segmentation knowledge sources
--------------------------------

.. contents::
    :depth: 1
    :local:

This section focuses on implementation of knowledge sources for the segmentation
of auditory features within the blackboard framework.

.. _sec-segmentation-knowledge-source:

Segmentation knowledge source: ``SegmentationKS``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The segmentation knowledge source generates hypotheses about the assignment of
individual time-frequency units to sound sources present in a scene. This
assignment is done probabilistically, hence, each time-frequency unit is
associated with a unique discrete probability distribution. These distributions
can be interpreted as soft-masks which can be used to generate segmented
auditory features. Specifically, each auditory feature that can be represented
in the time-frequency domain can be modified accordingly by a corresponding
soft-mask.  The soft-masks are generated by a probabilistic clustering approach
based on a mixture of von Mises distributions over estimated angular positions
of the sound sources. These positions can either be estimated by the
``SegmentationKS`` itself or provided by a
``SourcesAzimuthsDistributionHypothesis`` on the blackboard. If not all source
positions can be reliably estimated by the ``DnnLocationKS``, the remaining
positions are estimated during the segmentation process. All estimated positions
are subsumed with corresponding circular uncertainties in a
``sourceAzimuthHypotheses`` object for each sound source. Additionally, the
estimated soft-masks are stored in a sound source specific
``segmentationHypotheses`` object. Each ``sourceAzimuthHypotheses`` and
``segmentationHypotheses`` contains a unique source identifier tag, enabling
other knowledge sources to assign each soft-mask with the corresponding source
position. The current implementation of the ``SegmentationKS`` relies on a
pre-defined number of sound sources that will be present in the scene.

+------------------------+------------------------------------------------------------+
| binds to               | ``AuditoryFrontEndKS.KsFiredEvent``                        |
+------------------------+------------------------------------------------------------+
| reads data category    | ``sourcesAzimuthsDistributionHypotheses``                  |
+------------------------+------------------------------------------------------------+
| writes data category   | ``sourceAzimuthHypotheses`` and ``segmentationHypotheses`` |
+------------------------+------------------------------------------------------------+
| triggers event         | ``KsFiredEvent``                                           |
+------------------------+------------------------------------------------------------+

.. vim: filetype=rst spell:
